{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","id","name","email","className","src","alt","CardList","robots","cardComponent","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLocaleLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAgBeA,EAbF,SAACC,GACV,IAAOC,EAAiBD,EAAjBC,GAAGC,EAAcF,EAAdE,KAAKC,EAASH,EAATG,MACf,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAG,+BAA0BH,GAA1B,OAAiCD,EAAjC,YAA+CK,IAAI,KAC3D,sBAAKF,UAAU,KAAf,UACI,6BAAKF,IACL,4BAAIC,WCWLI,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAIVC,EAAgBD,EAAOE,KAAI,SAACC,EAAKC,GACnC,OAAO,cAAC,EAAD,CAEHX,GAAOO,EAAOI,GAAGX,GACjBC,KAASM,EAAOI,GAAGV,KACnBC,MAAUK,EAAOI,GAAGT,OAHfK,EAAOI,GAAGX,OAMvB,OAAS,cAAC,WAAD,UACJQ,KCDMI,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKV,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAYH,OCCbI,EARA,SAAClB,GACZ,OACI,qBAAKmB,MAAO,CAACC,UAAW,SAASC,OAAO,kBAAmBC,OAAO,SAAlE,SACKtB,EAAMuB,YCiBJC,E,kDAnBX,WAAYxB,GAAQ,IAAD,8BACf,cAAMA,IACDyB,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAG5B,WACI,OAAGG,KAAKJ,MAAMC,SACF,uDAELG,KAAK7B,MAAMuB,a,GAhBCQ,aC8DZC,G,wDAvDX,aAAc,IAAD,8BACT,gBAkBJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CACVK,YAAYD,EAAME,OAAOC,SAnB7B,EAAKZ,MAAQ,CACTjB,OAAO,GACP2B,YAAY,IAJP,E,qDAQb,WAAqB,IAAD,OAChBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACxBF,MAAK,SAAAG,GACH,EAAKZ,SAAS,CACVtB,OAAOkC,S,oBAYnB,WAEI,MAA8Bb,KAAKJ,MAA5BjB,EAAP,EAAOA,OAAQ2B,EAAf,EAAeA,YACTQ,EAAiBnC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAM3C,KAAK4C,oBAAoBC,SAASZ,EAAYW,wBAG/D,OAAqB,IAAlBtC,EAAOwC,OAEF,qBAAK5C,UAAU,KAAf,SACI,2CAKJ,sBAAKA,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAAQmC,e,GA9C5BZ,cCIHkB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.58b627ff.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Card = (props) => {\r\n    const {id,name,email} = props;\r\n    return (\r\n        <div className='bg-light-green dib br3 pa2 ma2 grow bw2 shadow-5'>\r\n            <img src={`https://robohash.org/${name}${id}?200x200`} alt=''/>\r\n            <div className=\"tc\">\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React, { Fragment } from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    // if(true) {\r\n    //     throw new Error('noooo');\r\n    // }\r\n    const cardComponent = robots.map((user,i)=>{\r\n        return <Card \r\n            key={robots[i].id}\r\n            id = { robots[i].id }\r\n            name = { robots[i].name }\r\n            email = { robots[i].email }\r\n        />\r\n    });\r\n    return ( <Fragment >\r\n        {cardComponent}\r\n         </Fragment >\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return (\r\n        <div className=\"pa3\">\r\n            <input \r\n                className=\"pa3 ba b--green bg-lightest-blue\"\r\n                type=\"search\" \r\n                placeholder=\"Search robots\"\r\n                onChange = {searchChange}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n \r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll',border:'1px solid black', height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React,{Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError:true});\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError) {\r\n            return( <h1>Ops. That is not good</h1>)\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry'\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            robots:[],\r\n            searchfield:''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=> response.json()\r\n        ).then(users=>{\r\n            this.setState({\r\n                robots:users\r\n            });\r\n        });\r\n        \r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({\r\n            searchfield:event.target.value\r\n        });\r\n    }\r\n\r\n    render()\r\n    {\r\n        const {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot=>{\r\n            return robot.name.toLocaleLowerCase().includes(searchfield.toLocaleLowerCase());\r\n        });\r\n\r\n        if(robots.length === 0) {\r\n            return (\r\n                <div className='tc'>\r\n                    <h1>Loading</h1>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"tc\">\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll >\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filteredRobots}/>\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n   \r\n\r\nexport default App;\r\n\r\n\r\n// export const AppFunction = () => {\r\n//     const state = {\r\n//         robots:robots,\r\n//         searchfield:''\r\n//     }\r\n//     const onSearchChange = (event) => {\r\n//        state.setState({\r\n//             searchfield:event.target.value\r\n//         });\r\n//     }\r\n\r\n//     const filteredRobots = state.robots.filter(robot=>{\r\n//         return robot.name.toLocaleLowerCase().includes(state.searchfield.toLocaleLowerCase());\r\n//     });\r\n\r\n//     return (\r\n//         <div className=\"tc\">\r\n//                 <h1>RoboFriends</h1>\r\n//                 <SearchBox searchChange={onSearchChange} />\r\n//                 <CardList robots={filteredRobots}/>\r\n//             </div>\r\n//     )\r\n// }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport 'tachyons';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>    \n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}